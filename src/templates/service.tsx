import * as React from "react";
import Markdown from 'markdown-to-jsx';
import { formatPhoneNumber } from 'react-phone-number-input';
import {
  Template,
  GetPath,
  GetRedirects,
  TemplateConfig,
  TemplateProps,
  TemplateRenderProps,
  GetHeadConfig,
  HeadConfig,
 } from "@yext/pages";
import Header from "../components/header";
import Footer from "../components/footer";
import "../index.css";
 

 export const config: TemplateConfig = {
   stream: {
     $id: "services-stream",
     filter: {
      savedFilterIds: [
        '935268770'
      ],
    },
     fields: [
       "id",
       "uid",
       "meta",
       "name",
       "slug",
       "description",
       "richTextDescription",
       "c_richTextDescriptionOverride",
       "c_legalApproved",
       "c_parentTopic.name",
       "c_parentTopic.slug",
       "c_parentTopic.id",
     ],
     localization: {
       locales: ["en"],
       primary: false,
     },
   },
 };
 
 export const getPath: GetPath<TemplateProps> = ({document}) => {
  return `${document.slug.toString()}`;
 };
 
 export const getHeadConfig: GetHeadConfig<TemplateRenderProps> = ({relativePrefixToRoot, path, document}): HeadConfig => {
  return {
     title: document.name,
     charset: "UTF-8",
     viewport: "width=device-width, initial-scale=1",
     tags: [
       {
         type: "meta",
         attributes: {
           description: "This site was generated by the Yext SSG",
         },
       },
     ],
   };
 };
 

 const Service: Template<TemplateRenderProps> = ({relativePrefixToRoot, path, document}) => {
   const {
     _site,
     name,
     description,
     richTextDescription,
     c_richTextDescriptionOverride,
     logo,
     c_legalApproved,
     c_parentTopic,
   } = document;
   
   // Check for RTF description override
   var updatedRTD = "";
   if (c_richTextDescriptionOverride) {
    updatedRTD = c_richTextDescriptionOverride;
   } else {
    updatedRTD = richTextDescription;
   }

   // Localize RTF description
   updatedRTD = updatedRTD.replaceAll("{{name}}", _site.c_relatedFacility[0].name);
   updatedRTD = updatedRTD.replaceAll("{{address.city}}", _site.c_relatedFacility[0].address.city);
   updatedRTD = updatedRTD.replaceAll("{{address.region}}", _site.c_relatedFacility[0].address.region);
   updatedRTD = updatedRTD.replaceAll("{{mainPhone}}", formatPhoneNumber(_site.c_relatedFacility[0].mainPhone));

   return (
     <>
       <body className="font-main">
         <Header site={_site}></Header>
           <div className="centered-container">
            <div className="breadcrumbs flex space-x-5 py-5">
              <a href="/" className="font-semibold hover:underline">Home</a>
              <span>/</span>
              <span>{name}</span>
            </div>
            <div className="section space-y-5">
              <h1 className="text-center">{name}</h1>
              <Markdown className="space-y-5">{updatedRTD}</Markdown>
            </div>
           </div>
         <Footer site={_site}></Footer>
       </body>
     </>
   );
 };
 
 export default Service;
 